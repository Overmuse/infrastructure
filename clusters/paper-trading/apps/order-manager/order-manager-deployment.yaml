apiVersion: v1
kind: ConfigMap
metadata:
  name: order-manager
data:
  KAFKA__GROUP_ID: order-manager
  KAFKA__INPUT_TOPICS: overmuse-trades,position-intents
  KAFKA__ACKS: "1"
  KAFKA__RETRIES: "3"
  DATABASE__URL: postgres://postgres:password@postgres:5432
  DATABASE__NAME: order-manager
  RUST_LOG: order_manager=debug
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-manager
spec:
  selector:
    matchLabels:
      app: order-manager
  replicas: 1
  template:
    metadata:
      labels:
        app: order-manager
    spec:
      containers:
      - name: order-manager
        image: 799439856592.dkr.ecr.us-east-1.amazonaws.com/order-manager:v4.0.1 # {"$imagepolicy": "flux-system:order-manager"}
        env:
        envFrom:
        - secretRef:
            name: kafka
        - configMapRef:
            name: order-manager
        - configMapRef:
            name: kafka
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: order-manager
data:
  POSTGRES_DB: order-manager
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv-volume
  labels:
    type: local
    app: order-manager
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/mnt/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim
  labels:
    app: order-manager
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: order-manager
  replicas: 1
  template:
    metadata:
      labels:
        app: order-manager
    spec:
      containers:
        - name: postgres
          image: postgres:10.4
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: order-manager
spec:
  type: NodePort
  ports:
   - port: 5432
  selector:
   app: order-manager
